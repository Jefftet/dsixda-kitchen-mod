
echo "-------------------------------------------------------------------------"
echo " Porting MIUI ${VERSION}"
echo "-------------------------------------------------------------------------"
echo
echo -n "--> Proceed with Port (y/n)? (default: y): "
read PROCEED

if [ "$PROCEED" == "n" ]
then
  exit 0
else

  KITCHEN=~/dev/kitchen
  OVERLAY=tools/speedy/overlay/*
  MMS_MODS=tools/speedy/mms/*
  FRAME_MODS=tools/speedy/framework/*
  SPEEDY_DIR=tools/speedy
  APP2SD_DIR=tools/speedy/app2sd/*

  echo -n "--> Enter MIUI build version: "
  read VERSION

  BUILD_DIR=WORKING_${VERSION}
  WORKING=~/dev/kitchen/${BUILD_DIR}

  if [ -e $BUILD_DIR ]
  then
    echo -n "--> $BUILD_DIR exists, Remove it (y/n)? (default: y): "
    read REMOVE

    if [ "$REMOVE" == "n" ]
    then
      exit 0
    fi
    rm -rf $BUILD_DIR
  fi

  clear
  echo "-------------------------------------------------------------------------"
  echo " Porting MIUI ${VERSION}"
  echo "-------------------------------------------------------------------------"
  echo "--> Creating working folder  ..."
  mkdir $BUILD_DIR

  echo "--> Locating base rom ..."
  if [ -e original_update/MIUI.us_vision_${VERSION}_Eng_Deo_ZipA_Signed.zip ]
  then
    echo "--> Base rom found locally."
  else
    echo "--> Downloading base rom ..."
    wget -O original_update/MIUI.us_vision_${VERSION}_Eng_Deo_ZipA_Signed.zip "http://romsmaster.miui.us/${VERSION}/MIUI.us_vision_${VERSION}_Eng_Deo_ZipA_Signed.zip"
  fi

  echo "--> Extracting rom ..."
  unzip -q original_update/MIUI.us_vision_${VERSION}_Eng_Deo_ZipA_Signed.zip -d $BUILD_DIR -x bootloader.img recovery.img recovery_signed.img userdata.img radio.img rcdata.img splash1.nb0 splash2.nb0 android-info.txt 2>/dev/null

  echo "--> Prepairing rom ..."
  rm -fr $BUILD_DIR/META-INF
  rm -f $BUILD_DIR/boot.img
  rm -f $BUILD_DIR/system/etc/A1026_CFG.csv
  rm -f $BUILD_DIR/system/etc/AdieHWCodec_WA.csv
  rm -f $BUILD_DIR/system/etc/T-Mobile*
  rm -f $BUILD_DIR/system/etc/firmware/Vision*
  rm -f $BUILD_DIR/system/etc/firmware/default_org_WA.acdb
  rm -f $BUILD_DIR/system/etc/permissions/android.hardware.telephony.gsm.xml
  rm -f $BUILD_DIR/system/lib/hw/*.vision.so
  rm -f $BUILD_DIR/system/lib/modules/*
  rm -f $BUILD_DIR/system/usr/keychars/vision*
  rm -f $BUILD_DIR/system/usr/keylayout/vision*
  cp $BUILD_DIR/system/build.prop $BUILD_DIR/system/build.orig
  rm -f $BUILD_DIR/system/build.prop

  echo "--> Copying Device files ..."
  cp -rf $OVERLAY $BUILD_DIR

  clear
  echo "-------------------------------------------------------------------------"
  echo " Porting MIUI ${VERSION}"
  echo "-------------------------------------------------------------------------"
  echo "--> Installing Framework-res ..."
  apktool if $BUILD_DIR/system/framework/framework-res.apk

  clear
  echo "-------------------------------------------------------------------------"
  echo " Porting MIUI ${VERSION}"
  echo "-------------------------------------------------------------------------"
  echo "--> Modifying Mms.apk ..."
  echo "--> Decompiling Mms.apk..."
  apktool d -f $BUILD_DIR/system/app/Mms.apk apk/Mms
  echo "--> Applying patch ..."
  cp -rf $MMS_MODS apk/Mms
  sleep 1
  echo "--> Building Mms.apk ..."
  apktool b apk/Mms
  cd apk/Mms/build/apk
  zip -q -u $WORKING/system/app/Mms.apk res/xml/mms_config.xml
  cd $KITCHEN
  rm -rf apk/Mms

  clear
  echo "-------------------------------------------------------------------------"
  echo " Porting MIUI ${VERSION}"
  echo "-------------------------------------------------------------------------"
  echo "--> Updating build.prop ..."
  cd $BUILD_DIR/system
  BUILD=`grep -m 1 ro.build.display.id build.orig \
        | sed 's/ro.build.display.id=MIUI.//g'`

  sed -ri s/ro.modversion=/ro.modversion=MIUIUS-"$BUILD"-EN-SPEEDY/g build.prop
  sed -ri s/ro.build.display.id=/ro.build.display.id=MIUI."$BUILD"/g build.prop

  INC=`grep -m 1 ro.build.version.incremental build.orig \
       | sed 's/ro.build.version.incremental=//g'`

  sed -ri s/ro.build.version.incremental=/ro.build.version.incremental="$INC"/g build.prop

  BUILD_DATE=`grep -m 1 ro.build.date build.orig \
              | sed 's/ro.build.date=//g'`

  sed -ri s/ro.build.date=/ro.build.date="$BUILD_DATE"/g build.prop

  UTC=`grep -m 1 ro.build.date.utc build.orig \
       | sed 's/ro.build.date.utc=//g'`

  sed -ri s/ro.build.date.utc=/ro.build.date.utc="$UTC"/g build.prop
  rm -f build.orig
  cd $KITCHEN

  echo "--> ZipAligning apks..."
  cd $BUILD_DIR
  APKS=`find . | grep .apk$ | sort -f`
  APK1=

  for APK in $APKS
  do
    if [ "`echo $APK | grep .apk$`" == "" ]
    then
      if [ "$APK1" == "" ]
      then
        APK1=$APK
      else
        APK1="$APK1 $APK"
      fi
      continue
    elif [ "$APK1" != "" ]
    then
      APK2=$APK
      ORIG_APK="$APK1 $APK2"
      APK=`echo $ORIG_APK | tr ' ' '_'`
      mv "$APK1 $APK2" $APK
      SPACE=yes
      echo "    $ORIG_APK"
    else
      SPACE=no
      echo "    $APK"
    fi

    NEW_APK=$APK\_new
    $KITCHEN/tools/zipalign_files/zipalign 4 $APK $NEW_APK

    if [ -e $NEW_APK ]
    then
      if [ "$SPACE" == "yes" ]
      then
        mv -f $NEW_APK "$APK1 $APK2"
        rm -f $APK
      else
        mv -f $NEW_APK $APK 
      fi
    else
      echo "--> ERROR: Unable to zipalign, aborting"
      break
    fi
    APK1=
  done
  cd $KITCHEN

  clear
  echo "-------------------------------------------------------------------------"
  echo " Porting MIUI ${VERSION}"
  echo "-------------------------------------------------------------------------"
  echo "--> Building Rom ..."
  cd $BUILD_DIR  
  if [ -e $KITCHEN/OUTPUT_ZIP/Speedy_unsigned.zip ]
  then
    rm -f $KITCHEN/OUTPUT_ZIP/Speedy_unsigned.zip
  fi
  zip -q -r -y $KITCHEN/OUTPUT_ZIP/Speedy_unsigned.zip *

  echo "--> Building Rom w/App2sd..."
  if [ -e $KITCHEN/OUTPUT_ZIP/Speedy_App2sd_unsigned.zip ]
  then
    rm -f $KITCHEN/OUTPUT_ZIP/Speedy_App2sd_unsigned.zip
  fi
  cd $KITCHEN
  cd $BUILD_DIR/system
  sed -ri s/ro.modversion=MIUIUS-"$BUILD"-EN-SPEEDY/ro.modversion=/g build.prop
  cd $KITCHEN
  cp -rf $APP2SD_DIR $BUILD_DIR
  cd $KITCHEN
  cd $BUILD_DIR
  zip -q -r -y $KITCHEN/OUTPUT_ZIP/Speedy_App2sd_unsigned.zip *
  cd $KITCHEN

  echo "--> Signing Rom ..."
  if [ -e OUTPUT_ZIP/MIUI.us_Speedy_${VERSION}_Eng_Deo_ZipA_Signed_Jefftet.zip ]
  then
    rm -f OUTPUT_ZIP/MIUI.us_Speedy_${VERSION}_Eng_Deo_ZipA_Signed_Jefftet.zip
  fi
  java -jar tools/signapk_files/signapk.jar tools/signapk_files/testkey.x509.pem tools/signapk_files/testkey.pk8 OUTPUT_ZIP/Speedy_unsigned.zip OUTPUT_ZIP/MIUI.us_Speedy_${VERSION}_Eng_Deo_ZipA_Signed_Jefftet.zip
  rm -f OUTPUT_ZIP/Speedy_unsigned.zip

  echo "--> Signing Rom w/App2sd..."
  if [ -e OUTPUT_ZIP/MIUI.us_Speedy_${VERSION}_Eng_Deo_ZipA_App2sd_Signed_Jefftet.zip ]
  then
    rm -f OUTPUT_ZIP/MIUI.us_Speedy_${VERSION}_Eng_Deo_ZipA_App2sd_Signed_Jefftet.zip
  fi
  java -jar tools/signapk_files/signapk.jar tools/signapk_files/testkey.x509.pem tools/signapk_files/testkey.pk8 OUTPUT_ZIP/Speedy_App2sd_unsigned.zip OUTPUT_ZIP/MIUI.us_Speedy_${VERSION}_Eng_Deo_ZipA_App2sd_Signed_Jefftet.zip
  rm -f OUTPUT_ZIP/Speedy_App2sd_unsigned.zip

  echo "--> Rom port Complete."
fi
exit 0
